#!/bin/bash

export_vars=$(cgroup-limits); export $export_vars
source ${CONTAINER_SCRIPTS_PATH}/common.sh
set -eu
if [[ -v DEBUG_IGNORE_SCRIPT_FAILURES ]]; then
  set +e
fi

export_setting_variables

log_volume_info $MYSQL_DATADIR

# pre-init files
process_extending_files ${APP_DATA}/mysql-pre-init/ ${CONTAINER_SCRIPTS_PATH}/pre-init/

WSREP_NEW_CLUSTER_OPTION=""
# Init galera (only for the first node in the cluster)
if [[ -v GALERA_INIT ]]; then
    cp /usr/share/container-scripts/mysql/65-galera.cnf /etc/my.cnf.d/
    sed -i -e "/\[mysqld\]/a\wsrep_cluster_address=gcomm://" /etc/my.cnf.d/65-galera.cnf
    WSREP_NEW_CLUSTER_OPTION="--wsrep-new-cluster"
fi


if [ ! -d "$MYSQL_DATADIR/mysql" ]; then
  initialize_database "$@"
else
  start_local_mysql "$@"
fi

# init files
process_extending_files ${APP_DATA}/mysql-init/ ${CONTAINER_SCRIPTS_PATH}/init/

# Restart the MySQL server with public IP bindings
shutdown_local_mysql
unset_env_vars
log_volume_info $MYSQL_DATADIR
log_info 'Running final exec -- Only MySQL server logs after this point'

# Galera cluster nodes
if [[ -v CLUSTERS_IP4 ]]; then
    if [[ ! -z  "$CLUSTERS_IP4" ]]; then
        cp /usr/share/container-scripts/mysql/65-galera.cnf /etc/my.cnf.d/

        # Add cluster nodes IPs
        sed -i -e "/\[mysqld\]/a\wsrep_cluster_address=gcomm://$CLUSTERS_IP4" /etc/my.cnf.d/65-galera.cnf
    else
        echo "ERROR: The 'CLUSTERS_IP4' variable is empty, please set the variable to the IP addresses of all cluster nodes"
        exit 1
    fi
fi

exec ${MYSQL_PREFIX}/libexec/mysqld --defaults-file=$MYSQL_DEFAULTS_FILE $WSREP_NEW_CLUSTER_OPTION "$@" 2>&1
